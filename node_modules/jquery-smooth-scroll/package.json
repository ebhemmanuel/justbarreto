{
  "name": "jquery-smooth-scroll",
  "title": "jQuery Smooth Scroll",
  "version": "1.5.3",
  "scripts": {},
  "main": "jquery.smooth-scroll.js",
  "author": {
    "name": "Karl Swedberg",
    "email": "kswedberg@gmail.com",
    "url": "http://www.learningjquery.com/"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/kswedberg/jquery-smooth-scroll"
  },
  "homepage": "https://github.com/kswedberg/jquery-smooth-scroll",
  "docs": "https://github.com/kswedberg/jquery-smooth-scroll",
  "bugs": {
    "url": "https://github.com/kswedberg/jquery-smooth-scroll/issues"
  },
  "demo": "http://plugins.learningjquery.com/smooth-scroll/demo/",
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/kswedberg/jquery-smooth-scroll/blob/master/LICENSE-MIT"
    }
  ],
  "dependencies": {
    "jquery": ">=1.3"
  },
  "devDependencies": {
    "grunt": "~0.4.0",
    "grunt-contrib-concat": "~0.5.0",
    "grunt-contrib-jshint": "~0.1.1",
    "grunt-contrib-uglify": "~0.1.1",
    "grunt-contrib-watch": "~0.3.1",
    "grunt-shell": "~0.2",
    "grunt-version": "~0.1.1",
    "marked": "^0.3.2",
    "node-syntaxhighlighter": "~0.8.1",
    "qunitjs": "^1.15.0"
  },
  "keywords": [
    "jQuery",
    "scroll",
    "animation"
  ],
  "readmeFilename": "readme.md",
  "readme": "# Smooth Scroll Plugin\n\nAllows for easy implementation of smooth scrolling for same-page links.\n\n## Download\n\nUsing npm:\n\n```bash\nnpm install jquery-smooth-scroll\n```\n\nUsing bower:\n\n```bash\nbower install jquery-smooth-scroll\n```\n\nThe old-fashioned way:\n\nGo to the following URL in your browser and copy/paste the code into your own file:\nhttps://raw.githubusercontent.com/kswedberg/jquery-smooth-scroll/master/jquery.smooth-scroll.js\n\n## Features\n\n### $.fn.smoothScroll\n\n* Works like this: `$('a').smoothScroll();`\n* Specify a containing element if you want: `$('#container a').smoothScroll();`\n* Exclude links if they are within a containing element: `$('#container a').smoothScroll({excludeWithin: ['.container2']});`\n* Exclude links if they match certain conditions: `$('a').smoothScroll({exclude: ['.rough','#chunky']});`\n* Adjust where the scrolling stops: `$('.backtotop').smoothScroll({offset: -100});`\n* Add a callback function that is triggered before the scroll starts: `$('a').smoothScroll({beforeScroll: function() { alert('ready to go!'); }});\n* Add a callback function that is triggered after the scroll is complete: `$('a').smoothScroll({afterScroll: function() { alert('we made it!'); }});`\n* Add back button support by including a history management plugin such as [Ben Alman's BBQ](http://benalman.com/code/projects/jquery-bbq/docs/files/jquery-ba-bbq-js.html). See [demo/bbq.html](demo/bbq.html) for an example of how to implement this.\n\n\n#### Options\n\nThe following options, shown with their default values, are available for both `$.fn.smoothScroll` and `$.smoothScroll`:\n\n```javascript\n{\n  offset: 0,\n\n  // one of 'top' or 'left'\n  direction: 'top',\n\n  // only use if you want to override default behavior\n  scrollTarget: null,\n\n  // fn(opts) function to be called before scrolling occurs.\n  // `this` is the element(s) being scrolled\n  beforeScroll: function() {},\n\n  // fn(opts) function to be called after scrolling occurs.\n  // `this` is the triggering element\n  afterScroll: function() {},\n  easing: 'swing',\n\n  // speed can be a number or 'auto'\n  // if 'auto', the speed will be calculated based on the formula:\n  // (current scroll position - target scroll position) / autoCoeffic\n  speed: 400,\n\n  // autoCoefficent: Only used when speed set to \"auto\".\n  // The higher this number, the faster the scroll speed\n  autoCoefficient: 2,\n\n  // $.fn.smoothScroll only: whether to prevent the default click action\n  preventDefault: true\n\n}\n```\n\nThe options object for `$.fn.smoothScroll` can take two additional properties:\n`exclude` and `excludeWithin`. The value for both of these is an array of\nselectors, DOM elements or jQuery objects. Default value for both is an\nempty array.\n\n#### Setting options after initial call\n\nIf you need to change any of the options after you've already called `.smoothScroll()`,\nyou can do so by passing the `\"options\"` string as the first argument and an\noptions object as the second.\n\n### $.smoothScroll\n\n* Utility method works without a selector: `$.smoothScroll()`\n* Can be used to scroll any element (not just `document.documentElement` /\n  `document.body`)\n* Doesn't automatically fire, so you need to bind it to some other user\n  interaction. For example:\n\n        $('button.scrollsomething').on('click', function() {\n          $.smoothScroll({\n            scrollElement: $('div.scrollme'),\n            scrollTarget: '#findme'\n          });\n          return false;\n        });\n\n* The `$.smoothScroll` method can take one or two arguments.\n    * If the first argument is a number, the document is scrolled to that\n    position. If it's an options object, those options determine how the\n    document (or other element) will be scrolled.\n    * If a number is provided as the second argument, it will override whatever may have been set for the `scrollTarget` option.\n\n#### Additional Option\nThe following option, in addition to those listed for `$.fn.smoothScroll` above, is available\nfor `$.smoothScroll`:\n\n```javascript\n{\n  // jQuery set of elements you wish to scroll.\n  //  if null (default), $('html, body').firstScrollable() is used.\n  scrollElement: null\n}\n```\n\n### $.fn.scrollable\n\n* Selects the matched element(s) that are scrollable. Acts just like a\n  DOM traversal method such as `.find()` or `.next()`.\n* The resulting jQuery set may consist of **zero, one, or multiple**\n  elements.\n\n### $.fn.firstScrollable\n\n* Selects the first matched element that is scrollable. Acts just like a\n  DOM traversal method such as `.find()` or `.next()`.\n* The resulting jQuery set may consist of **zero or one** element.\n* This method is used *internally* by the plugin to determine which element\n  to use for \"document\" scrolling:\n  `$('html, body').firstScrollable().animate({scrollTop: someNumber},\n  someSpeed)`\n\n## Notes\n\n* To determine where to scroll the page, the `$.fn.smoothScroll` method looks\nfor an element with an _id_ attribute that matches the `<a>` element's hash.\nIt does _not_ look at the element's _name_ attribute. If you want a clicked link\nto scroll to a \"named anchor\" (e.g. `<a name=\"foo\">`), you'll need to use the\n`$.smoothScroll` method instead.\n* The plugin's `$.fn.smoothScroll` and `$.smoothScroll` methods use the\n`$.fn.firstScrollable` DOM traversal method (also defined by this plugin)\nto determine which element is scrollable. If no elements are scrollable,\nthese methods return a jQuery object containing an empty array, just like\nall of jQuery's other DOM traversal methods. Any further chained methods,\ntherefore, will be called against no elements (which, in most cases,\nmeans that nothing will happen).\n",
  "description": "Allows for easy implementation of smooth scrolling for same-page links.",
  "_id": "jquery-smooth-scroll@1.5.3",
  "dist": {
    "shasum": "c69ee3f0e565bede66949d14958f39d2584ad8a4"
  },
  "_from": "jquery-smooth-scroll@",
  "_resolved": "https://registry.npmjs.org/jquery-smooth-scroll/-/jquery-smooth-scroll-1.5.3.tgz"
}
